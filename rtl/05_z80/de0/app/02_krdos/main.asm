
        org     $0000
        include "constants.asm"

; RST #00 Сброс программы
; ----------------------------------------------------------------------

        di
        xor     a
        out     ($fe), a        ; Очистить бордер
        jp      main_entry
        nop

; RST #08 Печать символа в режиме телетайпа
; ----------------------------------------------------------------------

        jp      rst08_entry
        defb    0, 0, 0, 0, 0

; RST #10 Сервисное прерывание для обработки графики
; ----------------------------------------------------------------------

        jp      rst10_entry
        defb    0, 0, 0, 0, 0

; RST #18 Работа с диском, в том числе с виртуальным
; ----------------------------------------------------------------------

        jp      rst18_entry
        defb    0, 0, 0, 0, 0

; RST #20 Работа с клавиатурой
; ----------------------------------------------------------------------

        jp      rst20_entry
        defb    0, 0, 0, 0, 0

; RST #28 Не используется как прерывание. Lookup-таблица для PIX*
; ----------------------------------------------------------------------

        defb    $01, $02, $04, $08, $10, $20, $40, $80

; RST #30 Cервисное прерывание DOS
; ----------------------------------------------------------------------

        jp      rst30_entry
        defb    0, 0, 0, 0, 0

; RST #38 Прерывание от VSYNC от монитора каждые 1/60 секунду
; ----------------------------------------------------------------------

        jp      rst38_entry

; ГЛАВНАЯ ТОЧКА ВХОДА ПОСЛЕ RESET
; ----------------------------------------------------------------------

main_entry:

        im      1
        ld      sp, $0000
        ld      hl, $5B00           ; Очистка всей памяти
        ld      de, $5B01
        ld      bc, $A4FF
        ld      (hl), a
        ldir
        ld      a, $07 + $00        ; Очистка видеопамяти
        call    CLRSCR
        ld      de, MSG
        call    PRNMSG              ; Приветственная строка
        ld      ix, DOS_CMD         ; Буфер
        ei

KB_WAIT:

        xor     a
        rst     $20        
        call    BLINK_HIDE

        ; cp    10
        ; jp    z, KB_ENTER
        ; cp    9
        ; jp    z, KB_TAB
        ; cp    8
        ; jp    z, KB_BS
        ; .. left / right ..
        ; KB_INS_BUF

        ; ENTER, TAB

        ; BACKSPACE
        cp      $08
        jr      z, KB_DEL

        ; Добавить в буфер @todo add buffer
        ld      (ix + 0), a
        inc     ix

        ; Печать символа
        rst     $08

KB_NEXT:

        call    BLINK_SHOW
        jr      KB_WAIT

; ----------------------------------------------------------------------

KB_DEL:

        ld      a, $20
        call    PRNCHR              ; Удалить символ (текущий)
        ld      a, (TPCHRX)
        dec     a
        jp      m, KB_NEXT
        ld      (TPCHRX), a         ; Установить новую позицию

        xor     a
        ld      (ix + 0), a
        dec     ix                  ; Удалить из буфера

        ld      a, $20
        call    PRNCHR              ; Удалить предыдущий символ
        jr      KB_NEXT

; СТРОКИ
; ---------------------------------------------------------------------

MSG:    defm "KRDOS 1.0\n\n", 0

; ПРЕРЫВАНИЯ И ФУНКЦИИ СИСТЕМЫ
; ----------------------------------------------------------------------

                include "routines.asm"

rst08_entry:    include "inc/PCHR.asm"
rst10_entry:    include "inc/VSRV.asm"
rst18_entry:    ; disk
rst20_entry:    include "inc/KEYB.asm"
rst30_entry:    ; service dos
rst38_entry:    include "inc/VSYNC.asm"

; ДАННЫЕ
; ----------------------------------------------------------------------
ansi:           incbin "ansi.bin"
